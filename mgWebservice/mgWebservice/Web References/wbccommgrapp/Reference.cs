//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.34209.
// 
#pragma warning disable 1591

namespace mgWebservice.wbccommgrapp {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="mgWebServiceSoap", Namespace="http://moderngov.co.uk/namespaces")]
    public partial class mgWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetMeetingOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllMeetingsByDateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebCastMeetingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMeetingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDeletedWebcastMeetingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommitteesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCalendarEventsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCommitteesByUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetElectionResultsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetElectionResultsRdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMpOrMepsAndWardsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMpOrMepAndWardsByPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCouncillorsByWardOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCouncillorsByWardIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCouncillorsByPostcodeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAttachmentByPathOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckCommsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public mgWebService() {
            this.Url = global::mgWebservice.Properties.Settings.Default.mgWebservice_wbccommgrapp_mgWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetMeetingCompletedEventHandler GetMeetingCompleted;
        
        /// <remarks/>
        public event GetAllMeetingsByDateCompletedEventHandler GetAllMeetingsByDateCompleted;
        
        /// <remarks/>
        public event GetWebCastMeetingsCompletedEventHandler GetWebCastMeetingsCompleted;
        
        /// <remarks/>
        public event GetMeetingsCompletedEventHandler GetMeetingsCompleted;
        
        /// <remarks/>
        public event GetDeletedWebcastMeetingsCompletedEventHandler GetDeletedWebcastMeetingsCompleted;
        
        /// <remarks/>
        public event GetCommitteesCompletedEventHandler GetCommitteesCompleted;
        
        /// <remarks/>
        public event GetCalendarEventsCompletedEventHandler GetCalendarEventsCompleted;
        
        /// <remarks/>
        public event GetCommitteesByUserCompletedEventHandler GetCommitteesByUserCompleted;
        
        /// <remarks/>
        public event GetElectionResultsCompletedEventHandler GetElectionResultsCompleted;
        
        /// <remarks/>
        public event GetElectionResultsRdfCompletedEventHandler GetElectionResultsRdfCompleted;
        
        /// <remarks/>
        public event GetMpOrMepsAndWardsCompletedEventHandler GetMpOrMepsAndWardsCompleted;
        
        /// <remarks/>
        public event GetMpOrMepAndWardsByPostcodeCompletedEventHandler GetMpOrMepAndWardsByPostcodeCompleted;
        
        /// <remarks/>
        public event GetCouncillorsByWardCompletedEventHandler GetCouncillorsByWardCompleted;
        
        /// <remarks/>
        public event GetCouncillorsByWardIdCompletedEventHandler GetCouncillorsByWardIdCompleted;
        
        /// <remarks/>
        public event GetCouncillorsByPostcodeCompletedEventHandler GetCouncillorsByPostcodeCompleted;
        
        /// <remarks/>
        public event GetAttachmentCompletedEventHandler GetAttachmentCompleted;
        
        /// <remarks/>
        public event GetAttachmentByPathCompletedEventHandler GetAttachmentByPathCompleted;
        
        /// <remarks/>
        public event CheckCommsCompletedEventHandler CheckCommsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetMeeting", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMeeting(int lMeetingId) {
            object[] results = this.Invoke("GetMeeting", new object[] {
                        lMeetingId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeetingAsync(int lMeetingId) {
            this.GetMeetingAsync(lMeetingId, null);
        }
        
        /// <remarks/>
        public void GetMeetingAsync(int lMeetingId, object userState) {
            if ((this.GetMeetingOperationCompleted == null)) {
                this.GetMeetingOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeetingOperationCompleted);
            }
            this.InvokeAsync("GetMeeting", new object[] {
                        lMeetingId}, this.GetMeetingOperationCompleted, userState);
        }
        
        private void OnGetMeetingOperationCompleted(object arg) {
            if ((this.GetMeetingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeetingCompleted(this, new GetMeetingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetAllMeetingsByDate", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAllMeetingsByDate(int lCommitteeId, string sFromDate, string sToDate, bool bIsAscendingDateOrder) {
            object[] results = this.Invoke("GetAllMeetingsByDate", new object[] {
                        lCommitteeId,
                        sFromDate,
                        sToDate,
                        bIsAscendingDateOrder});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllMeetingsByDateAsync(int lCommitteeId, string sFromDate, string sToDate, bool bIsAscendingDateOrder) {
            this.GetAllMeetingsByDateAsync(lCommitteeId, sFromDate, sToDate, bIsAscendingDateOrder, null);
        }
        
        /// <remarks/>
        public void GetAllMeetingsByDateAsync(int lCommitteeId, string sFromDate, string sToDate, bool bIsAscendingDateOrder, object userState) {
            if ((this.GetAllMeetingsByDateOperationCompleted == null)) {
                this.GetAllMeetingsByDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllMeetingsByDateOperationCompleted);
            }
            this.InvokeAsync("GetAllMeetingsByDate", new object[] {
                        lCommitteeId,
                        sFromDate,
                        sToDate,
                        bIsAscendingDateOrder}, this.GetAllMeetingsByDateOperationCompleted, userState);
        }
        
        private void OnGetAllMeetingsByDateOperationCompleted(object arg) {
            if ((this.GetAllMeetingsByDateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllMeetingsByDateCompleted(this, new GetAllMeetingsByDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetWebCastMeetings", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetWebCastMeetings(int lCommitteeId, string sFromDate, string sToDate) {
            object[] results = this.Invoke("GetWebCastMeetings", new object[] {
                        lCommitteeId,
                        sFromDate,
                        sToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebCastMeetingsAsync(int lCommitteeId, string sFromDate, string sToDate) {
            this.GetWebCastMeetingsAsync(lCommitteeId, sFromDate, sToDate, null);
        }
        
        /// <remarks/>
        public void GetWebCastMeetingsAsync(int lCommitteeId, string sFromDate, string sToDate, object userState) {
            if ((this.GetWebCastMeetingsOperationCompleted == null)) {
                this.GetWebCastMeetingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebCastMeetingsOperationCompleted);
            }
            this.InvokeAsync("GetWebCastMeetings", new object[] {
                        lCommitteeId,
                        sFromDate,
                        sToDate}, this.GetWebCastMeetingsOperationCompleted, userState);
        }
        
        private void OnGetWebCastMeetingsOperationCompleted(object arg) {
            if ((this.GetWebCastMeetingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebCastMeetingsCompleted(this, new GetWebCastMeetingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetMeetings", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMeetings(int lCommitteeId, string sFromDate, string sToDate) {
            object[] results = this.Invoke("GetMeetings", new object[] {
                        lCommitteeId,
                        sFromDate,
                        sToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMeetingsAsync(int lCommitteeId, string sFromDate, string sToDate) {
            this.GetMeetingsAsync(lCommitteeId, sFromDate, sToDate, null);
        }
        
        /// <remarks/>
        public void GetMeetingsAsync(int lCommitteeId, string sFromDate, string sToDate, object userState) {
            if ((this.GetMeetingsOperationCompleted == null)) {
                this.GetMeetingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMeetingsOperationCompleted);
            }
            this.InvokeAsync("GetMeetings", new object[] {
                        lCommitteeId,
                        sFromDate,
                        sToDate}, this.GetMeetingsOperationCompleted, userState);
        }
        
        private void OnGetMeetingsOperationCompleted(object arg) {
            if ((this.GetMeetingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMeetingsCompleted(this, new GetMeetingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetDeletedWebcastMeetings", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetDeletedWebcastMeetings(string sFromDate, string sToDate) {
            object[] results = this.Invoke("GetDeletedWebcastMeetings", new object[] {
                        sFromDate,
                        sToDate});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetDeletedWebcastMeetingsAsync(string sFromDate, string sToDate) {
            this.GetDeletedWebcastMeetingsAsync(sFromDate, sToDate, null);
        }
        
        /// <remarks/>
        public void GetDeletedWebcastMeetingsAsync(string sFromDate, string sToDate, object userState) {
            if ((this.GetDeletedWebcastMeetingsOperationCompleted == null)) {
                this.GetDeletedWebcastMeetingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDeletedWebcastMeetingsOperationCompleted);
            }
            this.InvokeAsync("GetDeletedWebcastMeetings", new object[] {
                        sFromDate,
                        sToDate}, this.GetDeletedWebcastMeetingsOperationCompleted, userState);
        }
        
        private void OnGetDeletedWebcastMeetingsOperationCompleted(object arg) {
            if ((this.GetDeletedWebcastMeetingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDeletedWebcastMeetingsCompleted(this, new GetDeletedWebcastMeetingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetCommittees", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCommittees() {
            object[] results = this.Invoke("GetCommittees", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommitteesAsync() {
            this.GetCommitteesAsync(null);
        }
        
        /// <remarks/>
        public void GetCommitteesAsync(object userState) {
            if ((this.GetCommitteesOperationCompleted == null)) {
                this.GetCommitteesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommitteesOperationCompleted);
            }
            this.InvokeAsync("GetCommittees", new object[0], this.GetCommitteesOperationCompleted, userState);
        }
        
        private void OnGetCommitteesOperationCompleted(object arg) {
            if ((this.GetCommitteesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommitteesCompleted(this, new GetCommitteesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetCalendarEvents", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCalendarEvents(bool bGlobalCalendar, string sDateStart, string sDateEnd, int lUserId) {
            object[] results = this.Invoke("GetCalendarEvents", new object[] {
                        bGlobalCalendar,
                        sDateStart,
                        sDateEnd,
                        lUserId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCalendarEventsAsync(bool bGlobalCalendar, string sDateStart, string sDateEnd, int lUserId) {
            this.GetCalendarEventsAsync(bGlobalCalendar, sDateStart, sDateEnd, lUserId, null);
        }
        
        /// <remarks/>
        public void GetCalendarEventsAsync(bool bGlobalCalendar, string sDateStart, string sDateEnd, int lUserId, object userState) {
            if ((this.GetCalendarEventsOperationCompleted == null)) {
                this.GetCalendarEventsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCalendarEventsOperationCompleted);
            }
            this.InvokeAsync("GetCalendarEvents", new object[] {
                        bGlobalCalendar,
                        sDateStart,
                        sDateEnd,
                        lUserId}, this.GetCalendarEventsOperationCompleted, userState);
        }
        
        private void OnGetCalendarEventsOperationCompleted(object arg) {
            if ((this.GetCalendarEventsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCalendarEventsCompleted(this, new GetCalendarEventsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetCommitteesByUser", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCommitteesByUser(int lUserId) {
            object[] results = this.Invoke("GetCommitteesByUser", new object[] {
                        lUserId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCommitteesByUserAsync(int lUserId) {
            this.GetCommitteesByUserAsync(lUserId, null);
        }
        
        /// <remarks/>
        public void GetCommitteesByUserAsync(int lUserId, object userState) {
            if ((this.GetCommitteesByUserOperationCompleted == null)) {
                this.GetCommitteesByUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCommitteesByUserOperationCompleted);
            }
            this.InvokeAsync("GetCommitteesByUser", new object[] {
                        lUserId}, this.GetCommitteesByUserOperationCompleted, userState);
        }
        
        private void OnGetCommitteesByUserOperationCompleted(object arg) {
            if ((this.GetCommitteesByUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCommitteesByUserCompleted(this, new GetCommitteesByUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetElectionResults", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetElectionResults(int lElectionId) {
            object[] results = this.Invoke("GetElectionResults", new object[] {
                        lElectionId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetElectionResultsAsync(int lElectionId) {
            this.GetElectionResultsAsync(lElectionId, null);
        }
        
        /// <remarks/>
        public void GetElectionResultsAsync(int lElectionId, object userState) {
            if ((this.GetElectionResultsOperationCompleted == null)) {
                this.GetElectionResultsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetElectionResultsOperationCompleted);
            }
            this.InvokeAsync("GetElectionResults", new object[] {
                        lElectionId}, this.GetElectionResultsOperationCompleted, userState);
        }
        
        private void OnGetElectionResultsOperationCompleted(object arg) {
            if ((this.GetElectionResultsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetElectionResultsCompleted(this, new GetElectionResultsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetElectionResultsRdf", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetElectionResultsRdf(int lType, int lId) {
            object[] results = this.Invoke("GetElectionResultsRdf", new object[] {
                        lType,
                        lId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetElectionResultsRdfAsync(int lType, int lId) {
            this.GetElectionResultsRdfAsync(lType, lId, null);
        }
        
        /// <remarks/>
        public void GetElectionResultsRdfAsync(int lType, int lId, object userState) {
            if ((this.GetElectionResultsRdfOperationCompleted == null)) {
                this.GetElectionResultsRdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetElectionResultsRdfOperationCompleted);
            }
            this.InvokeAsync("GetElectionResultsRdf", new object[] {
                        lType,
                        lId}, this.GetElectionResultsRdfOperationCompleted, userState);
        }
        
        private void OnGetElectionResultsRdfOperationCompleted(object arg) {
            if ((this.GetElectionResultsRdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetElectionResultsRdfCompleted(this, new GetElectionResultsRdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetMpOrMepsAndWards", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMpOrMepsAndWards(bool bIsMPs) {
            object[] results = this.Invoke("GetMpOrMepsAndWards", new object[] {
                        bIsMPs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMpOrMepsAndWardsAsync(bool bIsMPs) {
            this.GetMpOrMepsAndWardsAsync(bIsMPs, null);
        }
        
        /// <remarks/>
        public void GetMpOrMepsAndWardsAsync(bool bIsMPs, object userState) {
            if ((this.GetMpOrMepsAndWardsOperationCompleted == null)) {
                this.GetMpOrMepsAndWardsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMpOrMepsAndWardsOperationCompleted);
            }
            this.InvokeAsync("GetMpOrMepsAndWards", new object[] {
                        bIsMPs}, this.GetMpOrMepsAndWardsOperationCompleted, userState);
        }
        
        private void OnGetMpOrMepsAndWardsOperationCompleted(object arg) {
            if ((this.GetMpOrMepsAndWardsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMpOrMepsAndWardsCompleted(this, new GetMpOrMepsAndWardsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetMpOrMepAndWardsByPostcode", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetMpOrMepAndWardsByPostcode(string sPostCode, bool bIsMPs) {
            object[] results = this.Invoke("GetMpOrMepAndWardsByPostcode", new object[] {
                        sPostCode,
                        bIsMPs});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetMpOrMepAndWardsByPostcodeAsync(string sPostCode, bool bIsMPs) {
            this.GetMpOrMepAndWardsByPostcodeAsync(sPostCode, bIsMPs, null);
        }
        
        /// <remarks/>
        public void GetMpOrMepAndWardsByPostcodeAsync(string sPostCode, bool bIsMPs, object userState) {
            if ((this.GetMpOrMepAndWardsByPostcodeOperationCompleted == null)) {
                this.GetMpOrMepAndWardsByPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMpOrMepAndWardsByPostcodeOperationCompleted);
            }
            this.InvokeAsync("GetMpOrMepAndWardsByPostcode", new object[] {
                        sPostCode,
                        bIsMPs}, this.GetMpOrMepAndWardsByPostcodeOperationCompleted, userState);
        }
        
        private void OnGetMpOrMepAndWardsByPostcodeOperationCompleted(object arg) {
            if ((this.GetMpOrMepAndWardsByPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMpOrMepAndWardsByPostcodeCompleted(this, new GetMpOrMepAndWardsByPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetCouncillorsByWard", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCouncillorsByWard() {
            object[] results = this.Invoke("GetCouncillorsByWard", new object[0]);
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCouncillorsByWardAsync() {
            this.GetCouncillorsByWardAsync(null);
        }
        
        /// <remarks/>
        public void GetCouncillorsByWardAsync(object userState) {
            if ((this.GetCouncillorsByWardOperationCompleted == null)) {
                this.GetCouncillorsByWardOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCouncillorsByWardOperationCompleted);
            }
            this.InvokeAsync("GetCouncillorsByWard", new object[0], this.GetCouncillorsByWardOperationCompleted, userState);
        }
        
        private void OnGetCouncillorsByWardOperationCompleted(object arg) {
            if ((this.GetCouncillorsByWardCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCouncillorsByWardCompleted(this, new GetCouncillorsByWardCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetCouncillorsByWardId", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCouncillorsByWardId(int lWardId) {
            object[] results = this.Invoke("GetCouncillorsByWardId", new object[] {
                        lWardId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCouncillorsByWardIdAsync(int lWardId) {
            this.GetCouncillorsByWardIdAsync(lWardId, null);
        }
        
        /// <remarks/>
        public void GetCouncillorsByWardIdAsync(int lWardId, object userState) {
            if ((this.GetCouncillorsByWardIdOperationCompleted == null)) {
                this.GetCouncillorsByWardIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCouncillorsByWardIdOperationCompleted);
            }
            this.InvokeAsync("GetCouncillorsByWardId", new object[] {
                        lWardId}, this.GetCouncillorsByWardIdOperationCompleted, userState);
        }
        
        private void OnGetCouncillorsByWardIdOperationCompleted(object arg) {
            if ((this.GetCouncillorsByWardIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCouncillorsByWardIdCompleted(this, new GetCouncillorsByWardIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetCouncillorsByPostcode", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetCouncillorsByPostcode(string sPostcode) {
            object[] results = this.Invoke("GetCouncillorsByPostcode", new object[] {
                        sPostcode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetCouncillorsByPostcodeAsync(string sPostcode) {
            this.GetCouncillorsByPostcodeAsync(sPostcode, null);
        }
        
        /// <remarks/>
        public void GetCouncillorsByPostcodeAsync(string sPostcode, object userState) {
            if ((this.GetCouncillorsByPostcodeOperationCompleted == null)) {
                this.GetCouncillorsByPostcodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCouncillorsByPostcodeOperationCompleted);
            }
            this.InvokeAsync("GetCouncillorsByPostcode", new object[] {
                        sPostcode}, this.GetCouncillorsByPostcodeOperationCompleted, userState);
        }
        
        private void OnGetCouncillorsByPostcodeOperationCompleted(object arg) {
            if ((this.GetCouncillorsByPostcodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCouncillorsByPostcodeCompleted(this, new GetCouncillorsByPostcodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetAttachment", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAttachment(int lAttachmentId) {
            object[] results = this.Invoke("GetAttachment", new object[] {
                        lAttachmentId});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentAsync(int lAttachmentId) {
            this.GetAttachmentAsync(lAttachmentId, null);
        }
        
        /// <remarks/>
        public void GetAttachmentAsync(int lAttachmentId, object userState) {
            if ((this.GetAttachmentOperationCompleted == null)) {
                this.GetAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetAttachment", new object[] {
                        lAttachmentId}, this.GetAttachmentOperationCompleted, userState);
        }
        
        private void OnGetAttachmentOperationCompleted(object arg) {
            if ((this.GetAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentCompleted(this, new GetAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/GetAttachmentByPath", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetAttachmentByPath(string sAttachmentPath) {
            object[] results = this.Invoke("GetAttachmentByPath", new object[] {
                        sAttachmentPath});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetAttachmentByPathAsync(string sAttachmentPath) {
            this.GetAttachmentByPathAsync(sAttachmentPath, null);
        }
        
        /// <remarks/>
        public void GetAttachmentByPathAsync(string sAttachmentPath, object userState) {
            if ((this.GetAttachmentByPathOperationCompleted == null)) {
                this.GetAttachmentByPathOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAttachmentByPathOperationCompleted);
            }
            this.InvokeAsync("GetAttachmentByPath", new object[] {
                        sAttachmentPath}, this.GetAttachmentByPathOperationCompleted, userState);
        }
        
        private void OnGetAttachmentByPathOperationCompleted(object arg) {
            if ((this.GetAttachmentByPathCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAttachmentByPathCompleted(this, new GetAttachmentByPathCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://moderngov.co.uk/namespaces/CheckComms", RequestNamespace="http://moderngov.co.uk/namespaces", ResponseNamespace="http://moderngov.co.uk/namespaces", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CheckComms(string sRid) {
            object[] results = this.Invoke("CheckComms", new object[] {
                        sRid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CheckCommsAsync(string sRid) {
            this.CheckCommsAsync(sRid, null);
        }
        
        /// <remarks/>
        public void CheckCommsAsync(string sRid, object userState) {
            if ((this.CheckCommsOperationCompleted == null)) {
                this.CheckCommsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckCommsOperationCompleted);
            }
            this.InvokeAsync("CheckComms", new object[] {
                        sRid}, this.CheckCommsOperationCompleted, userState);
        }
        
        private void OnCheckCommsOperationCompleted(object arg) {
            if ((this.CheckCommsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckCommsCompleted(this, new CheckCommsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMeetingCompletedEventHandler(object sender, GetMeetingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeetingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeetingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAllMeetingsByDateCompletedEventHandler(object sender, GetAllMeetingsByDateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllMeetingsByDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllMeetingsByDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetWebCastMeetingsCompletedEventHandler(object sender, GetWebCastMeetingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebCastMeetingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebCastMeetingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMeetingsCompletedEventHandler(object sender, GetMeetingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMeetingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMeetingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetDeletedWebcastMeetingsCompletedEventHandler(object sender, GetDeletedWebcastMeetingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDeletedWebcastMeetingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDeletedWebcastMeetingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCommitteesCompletedEventHandler(object sender, GetCommitteesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommitteesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommitteesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCalendarEventsCompletedEventHandler(object sender, GetCalendarEventsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCalendarEventsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCalendarEventsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCommitteesByUserCompletedEventHandler(object sender, GetCommitteesByUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCommitteesByUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCommitteesByUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetElectionResultsCompletedEventHandler(object sender, GetElectionResultsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetElectionResultsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetElectionResultsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetElectionResultsRdfCompletedEventHandler(object sender, GetElectionResultsRdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetElectionResultsRdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetElectionResultsRdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMpOrMepsAndWardsCompletedEventHandler(object sender, GetMpOrMepsAndWardsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMpOrMepsAndWardsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMpOrMepsAndWardsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetMpOrMepAndWardsByPostcodeCompletedEventHandler(object sender, GetMpOrMepAndWardsByPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMpOrMepAndWardsByPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMpOrMepAndWardsByPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCouncillorsByWardCompletedEventHandler(object sender, GetCouncillorsByWardCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCouncillorsByWardCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCouncillorsByWardCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCouncillorsByWardIdCompletedEventHandler(object sender, GetCouncillorsByWardIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCouncillorsByWardIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCouncillorsByWardIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetCouncillorsByPostcodeCompletedEventHandler(object sender, GetCouncillorsByPostcodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCouncillorsByPostcodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCouncillorsByPostcodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAttachmentCompletedEventHandler(object sender, GetAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void GetAttachmentByPathCompletedEventHandler(object sender, GetAttachmentByPathCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAttachmentByPathCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAttachmentByPathCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    public delegate void CheckCommsCompletedEventHandler(object sender, CheckCommsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.34209")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckCommsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckCommsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591